{
    "vim.easymotion": true,
    "vim.incsearch": true,
    "vim.useSystemClipboard": true,
    "vim.useCtrlKeys": true,
    "vim.hlsearch": true,
    "vim.timeout": 1000,
    "vim.insertModeKeyBindings": [
        {
            "before": ["j", "j"],
            "after": ["<Esc>"]
        }
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": ["<C-a>"],
            "after": ["g", "g", "V", "G"]
        },
        {
            "before": ["g", "c"],
            "commands": ["editor.action.commentLine"]
        },
        {
            "before": ["<leader>", "c", "r"],
            "commands": ["editor.action.rename"]
        },
        {
            "before": ["<leader>", "i"],
            "commands": ["editor.action.goToImplementation"]
        },
        {
            "before": ["g", "d"],
            "commands": ["editor.action.revealDefinition"]
        },
        {
            "before": ["g", "r"],
            "commands": ["editor.action.goToReferences"]
        },
        {
            "before": ["K"],
            "commands": ["editor.action.showHover"]
        },
        {
            "before": ["<leader>", "s", "f"],
            "commands": ["workbench.action.quickOpen"]
        },
        {
            "before": ["<leader>", "s", "a"],
            "commands": ["workbench.action.showCommands"]
        },
        {
            "before": ["<C-o>"],
            "commands": ["workbench.action.navigateBack"]
        },
        {
            "before": ["<C-i>"],
            "commands": ["workbench.action.navigateForward"]
        },
        {
            "before": ["<leader>", "s", "g"],
            "commands": ["workbench.view.search"]
        },
        {
            "before": ["<leader>", "e"],
            "commands": ["workbench.view.explorer"]
        },
        {
            "before": ["<leader>", "c", "f"],
            "commands": ["editor.action.formatDocument"]
        },
        {
            "before": ["<leader>", "c", "o"],
            "commands": ["editor.action.organizeImports"]
        },
        {
            "before": ["<leader>", "o", "r"],
            "commands": ["workbench.action.openRecent"]
        },
        {
            "before": ["<leader>", "c", "a"],
            "commands": ["editor.action.quickFix"]
        },
        // open source control view
        {
            "before": ["<leader>", "g", "g"],
            "commands": ["workbench.view.scm"]
        }
    ],
    "vim.visualModeKeyBindings": [
        {
            "before": ["g", "c"],
            "commands": ["editor.action.commentLine"]
        },
        {
            "before": [">"],
            "commands": ["editor.action.indentLines"]
        },
        {
            "before": ["<"],
            "commands": ["editor.action.outdentLines"]
        }
    ],
    "vim.leader": "<space>",
    "vim.handleKeys": {
        "<C-f>": false,
        "<C-b>": false,
        "<C-p>": false
    },
    "files.autoSave": "afterDelay",
    "workbench.editor.showTabs": "single",
    "zenMode.fullScreen": false,
    "zenMode.hideLineNumbers": false,
    "zenMode.showTabs": "single",
    "editor.fontSize": 16,
    "editor.minimap.enabled": false,
    "github.copilot.enable": {
        "*": true,
        "plaintext": false,
        "markdown": true,
        "scminput": false
    },
    "window.zoomLevel": 2,
    "workbench.iconTheme": "material-icon-theme",
    "multiCommand.commands": [
        {
            "command": "multiCommand.openAndToggleSidebar",
            "sequence": [
                "explorer.openAndPassFocus",
                "workbench.action.toggleSidebarVisibility"
            ]
        }
    ],
    "[jsonc]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "prettier.tabWidth": 4,
    "[typescriptreact]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "explorer.compactFolders": false,
    "workbench.colorTheme": "GitHub Light Default",
    "git.enableSmartCommit": true
}
